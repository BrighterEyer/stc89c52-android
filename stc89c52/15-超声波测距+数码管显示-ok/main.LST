C51 COMPILER V9.00   MAIN                                                                  12/17/2019 10:04:05 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: G:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*
   2          实验说明：
   3          
   4          实验接线：
   5                  动态数码管模块-->单片机管脚
   6                  参考动态数码管显示实验接线（开发攻略内在对应的实验章节内实验现象有接线说明）
   7                  超声波模块-->单片机管脚
   8                  TRIG（RX P3 ^ 0）-->P31（TX）
   9                  ECHO（TX P3 ^ 1）-->P30（RX）
  10          
  11          实验现象：
  12                  LCD1602上显示超声波检测的距离，单位mm
  13          */
  14          
  15          
  16          #include"reg51.h"
  17          
  18          #include <intrins.h>
  19          sbit RX = P3 ^ 0;
  20          sbit TX = P3 ^ 1;
  21          unsigned int  time = 0;
  22          unsigned int  timer = 0;
  23          unsigned char posit = 0;
  24          unsigned long S = 0;
  25          bit      flag = 0;
  26          //--定义使用的IO--//
  27          #define GPIO_DIG P0
  28          
  29          sbit LSA = P2 ^ 2;
  30          sbit LSB = P2 ^ 3;
  31          sbit LSC = P2 ^ 4;
  32          
  33          //--定义全局变量--//
  34          unsigned char code DIG_CODE[17] = {
  35                  0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07,
  36                  0x7f, 0x6f, 0x77, 0x7c, 0x39, 0x5e, 0x79, 0x71
  37          };
  38          //0、1、2、3、4、5、6、7、8、9、A、b、C、d、E、F的显示码
  39          unsigned char disbuff[4]           = { 0, 0, 0, 0,};
  40          /*******************************************************************************
  41          * 函 数 名         : DigDisplay
  42          * 函数功能                 : 使用数码管显示
  43          * 输    入         : 无
  44          * 输    出         : 无
  45          *******************************************************************************/
  46          void DigDisplay()
  47          {
  48   1              unsigned char i;
  49   1              unsigned int j;
  50   1              for (i = 0; i < 8; i++)
  51   1              {
  52   2                      switch (i)       //位选，选择点亮的数码管，
  53   2                      {
  54   3                      case (0):
  55   3                              LSA = 1; LSB = 1; LSC = 1; break; //显示第7位
C51 COMPILER V9.00   MAIN                                                                  12/17/2019 10:04:05 PAGE 2   

  56   3                      case (1):
  57   3                              LSA = 0; LSB = 1; LSC = 1; break; //显示第6位
  58   3                      case (2):
  59   3                              LSA = 1; LSB = 0; LSC = 1; break; //显示第5位
  60   3                      case (3):
  61   3                              LSA = 0; LSB = 0; LSC = 1; break; //显示第4位
  62   3                      case (4):
  63   3                              LSA = 1; LSB = 1; LSC = 0; break; //显示第3位
  64   3                      case (5):
  65   3                              LSA = 0; LSB = 1; LSC = 0; break; //显示第2位
  66   3                      case (6):
  67   3                              LSA = 1; LSB = 0; LSC = 0; break; //显示第1位
  68   3                      case (7):
  69   3                              LSA = 0; LSB = 0; LSC = 0; break; //显示第0位
  70   3                      }
  71   2                      GPIO_DIG = disbuff[i]; //发送段码
  72   2                      j = 10;                                          //扫描间隔时间设定
  73   2                      while (j--);
  74   2                      GPIO_DIG = 0x00; //消隐
  75   2              }
  76   1      }
  77          /********************************************************/
  78          void Conut(void)
  79          {
  80   1              time = TH0 * 256 + TL0;
  81   1              TH0 = 0;
  82   1              TL0 = 0;
  83   1      
  84   1              S = (long)(time * 0.17);  //算出来是CM
  85   1              if ((S >= 4000) || flag == 1) //超出测量范围显示“ERR0”
  86   1              {
  87   2                      flag = 0;
  88   2                      disbuff[0] = 0x3f;       //“-”
  89   2                      disbuff[1] = 0x50;       //“-”
  90   2                      disbuff[2] = 0x50;       //“-”
  91   2                      disbuff[3] = 0x79;       //“-”
  92   2              }
  93   1              else
  94   1              {
  95   2                      disbuff[0] = DIG_CODE[S % 10000 / 1000];
  96   2                      disbuff[1] = DIG_CODE[S % 1000 / 100];
  97   2                      disbuff[2] = DIG_CODE[S % 100 / 10];
  98   2                      disbuff[3] = DIG_CODE[S % 10 / 1];
  99   2              }
 100   1      }
 101          /********************************************************/
 102          void zd0() interrupt 1           //T0中断用来计数器溢出,超过测距范围
 103          {
 104   1              flag = 1;                                                        //中断溢出标志
 105   1      }
 106          /********************************************************/
 107          void  zd3()  interrupt 3                 //T1中断用来扫描数码管和计800MS启动模块
 108          {
 109   1              TH1 = 0xf8;
 110   1              TL1 = 0x30;
 111   1              DigDisplay();
 112   1              timer++;
 113   1              if (timer >= 100)
 114   1              {
 115   2                      timer = 0;
 116   2                      TX = 1;                               //800MS  启动一次模块
 117   2                      _nop_();
C51 COMPILER V9.00   MAIN                                                                  12/17/2019 10:04:05 PAGE 3   

 118   2                      _nop_();
 119   2                      _nop_();
 120   2                      _nop_();
 121   2                      _nop_();
 122   2                      _nop_();
 123   2                      _nop_();
 124   2                      _nop_();
 125   2                      _nop_();
 126   2                      _nop_();
 127   2                      _nop_();
 128   2                      _nop_();
 129   2                      _nop_();
 130   2                      _nop_();
 131   2                      _nop_();
 132   2                      _nop_();
 133   2                      _nop_();
 134   2                      _nop_();
 135   2                      _nop_();
 136   2                      _nop_();
 137   2                      _nop_();
 138   2                      TX = 0;
 139   2              }
 140   1      }
 141          /*********************************************************/
 142          
 143          void main(void) {
 144   1              TMOD = 0x11;             //设T0为方式1，GATE=1；
 145   1              TH0 = 0;
 146   1              TL0 = 0;
 147   1              TH1 = 0xf8;              //2MS定时
 148   1              TL1 = 0x30;
 149   1              ET0 = 1;           //允许T0中断
 150   1              ET1 = 1;                         //允许T1中断
 151   1              TR1 = 1;                         //开启定时器
 152   1              EA = 1;                  //开启总中断
 153   1      
 154   1              while (1)
 155   1              {
 156   2                      while (!RX);            //当RX为零时等待
 157   2                      TR0 = 1;                          //开启计数
 158   2                      while (RX);                     //当RX为1计数并等待
 159   2                      TR0 = 0;                                //关闭计数
 160   2                      Conut();                        //计算
 161   2              }
 162   1      
 163   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    521    ----
   CONSTANT SIZE    =     17    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     13    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
